{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content.component.html","webpack:///./src/app/content.component.ts","webpack:///./src/app/data/employee.service.ts","webpack:///./src/app/data/position.service.ts","webpack:///./src/app/employee.component.html","webpack:///./src/app/employee.component.ts","webpack:///./src/app/employees.component.html","webpack:///./src/app/employees.component.ts","webpack:///./src/app/footer.component.html","webpack:///./src/app/footer.component.ts","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/nav.component.html","webpack:///./src/app/nav.component.ts","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/position.component.html","webpack:///./src/app/position.component.ts","webpack:///./src/app/positions.component.html","webpack:///./src/app/positions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACR;AACU;AACA;AACQ;AACV;AACA;AAGvD,IAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAE,6DAAa,EAAC;IACvC,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uEAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uEAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,qEAAiB,EAAC;IACrD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,qEAAiB,EAAC;IACrD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAC,MAAM,EAAC;IACjD,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,+EAAqB,EAAC,CAAC,CAAC;AAMvE;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtB7B,gP;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;iFAQiF;;;;;;;AAEvC;AAO1C;IALA;QAME,UAAK,GAAG,WAAW,CAAC;IACtB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBiC;AACjB;AACe;AACT;AACE;AACU;AACA;AACJ;AACR;AACM;AACc;AACT;AACA;AACH;AACE;AACA;AACZ;AAyB7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6DAAa;gBACb,uEAAkB;gBAClB,uEAAkB;gBAClB,mEAAgB;gBAChB,2DAAY;gBACZ,iEAAe;gBACf,gFAAqB;gBACrB,sEAAiB;gBACjB,sEAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,sEAAgB;gBAChB,2DAAW;aACZ;YACD,SAAS,EAAE,CAAC,uEAAe,EAAE,uEAAe,CAAC;YAC7C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAE1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzCtB,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;YAEvB,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AAIO;AAOlD;IAIE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF9B,QAAG,GAAG,4CAA4C,CAAC;IAEjB,CAAC;IAEzC,sCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,eAAY,CAAC,CAAC;IAC5D,CAAC;IAED,qCAAW,GAAX,UAAY,EAAS;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,sBAAiB,EAAI,CAAC,CAAC;IACxE,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAqB;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,kBAAa,QAAQ,CAAC,GAAK,EAAE,QAAQ,CAAC,CAAC;IAE9E,CAAC;IAlBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AAEO;AAOlD;IAGE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,4CAA4C,CAAC;IAEnB,CAAC;IAEzC,sCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,eAAY,CAAC;IAC3D,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAkB;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,kBAAa,QAAQ,CAAC,GAAK,EAAE,QAAQ,CAAC;IAE7E,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,kBAAa,EAAI,CAAC;IAChE,CAAC;IAjBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;ACT5B,4DAA4D,oBAAoB,GAAG,mBAAmB,iXAAiX,sEAAsE,yeAAye,oEAAoE,qvBAAqvB,kBAAkB,4JAA4J,0EAA0E,spBAAspB,8EAA8E,8gBAA8gB,0EAA0E,idAAid,4EAA4E,8fAA8f,wEAAwE,gkBAAgkB,oEAAoE,6QAA6Q,EAAE,0BAA0B,EAAE,eAAe,EAAE,6SAA6S,sEAAsE,smCAAsmC,oBAAoB,GAAG,mBAAmB,qIAAqI,oBAAoB,GAAG,mBAAmB,iE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAthO;AAEQ;AACT;AACS;AAU1D;IAWE,2BAAoB,EAAmB,EAAU,EAAkB,EAAU,EAAmB;QAA5E,OAAE,GAAF,EAAE,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAiB;QAHhG,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAY,KAAK,CAAC;IAEuE,CAAC;IAErG,oCAAQ,GAAR;QAAA,iBAiBC;QAfC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAEtD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAG9E,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAE3B,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,iBAAO;oBAEtE,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC;gBAE3B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAQ,GAAR,UAAS,CAAS;QAAlB,iBAcC;QAbC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC5E,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,UAAU,CAAC;gBACT,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,EACC;YACE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,uCAAW,GAAX;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SAAE;QACrE,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAAE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SAAE;QAC3E,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAAE,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAAE;QACnF,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAAE,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAAE;IACrF,CAAC;IApDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;YAExB,MAAM,EAAE,EAAE;SACX,CAAC;yCAYwB,sEAAe,EAAc,8DAAc,EAAc,sEAAe;OAXrF,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA;AArD6B;;;;;;;;;;;;ACd9B,40BAA40B,eAAe,GAAG,cAAc,2BAA2B,mBAAmB,IAAI,kBAAkB,IAAI,iBAAiB,GAAG,gBAAgB,2BAA2B,cAAc,OAAO,eAAe,2BAA2B,iCAAiC,4G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjiC;AACQ;AAGjB;AASzC;IAKE,4BAAoB,CAAkB,EAAU,MAAc;QAA1C,MAAC,GAAD,CAAC,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF9D,iBAAY,GAAY,KAAK,CAAC;IAEoC,CAAC;IAInE,qCAAQ,GAAR;QAAA,iBAYC;QAVC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CACpD,mBAAS;YACT,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YACzB,KAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACrC,CAAC,EACD;YACE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;IAGN,CAAC;IACD,wCAAW,GAAX;QACE,IAAI,IAAI,CAAC,eAAe,EAAE;YAAE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SAAE;IACnE,CAAC;IAED,0CAAa,GAAb,UAAc,EAAU;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CACrC,CAAC;IACJ,CAAC;IACD,kDAAqB,GAArB,UAAsB,KAAU;QAE9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAG;YAChD,UAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBACtE,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBACrE,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAFlF,CAEkF,CAAC,CAAC;IAExF,CAAC;IArCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;YAEzB,MAAM,EAAE,EAAE;SACX,CAAC;yCAMuB,sEAAe,EAAkB,sDAAM;OALnD,kBAAkB,CAyC9B;IAAD,yBAAC;CAAA;AAzC8B;;;;;;;;;;;;ACb/B,oJAAoJ,qd;;;;;;;;;;;;;;;;;;;;;;;;ACAlG;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;YAEtB,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,okH;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,slC;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,+BAAQ,GAAR;IACA,CAAC;IALU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;YAEnB,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;ACPzB,4H;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;YAE9B,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,4DAA4D,uBAAuB,+YAA+Y,4EAA4E,umBAAumB,0FAA0F,6oC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtrC;AACR;AAGS;AAS1D;IASE,2BAAoB,CAAkB,EAAS,EAAkB;QAA7C,MAAC,GAAD,CAAC,CAAiB;QAAS,OAAE,GAAF,EAAE,CAAgB;QAHjE,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAY,KAAK,CAAC;IAI5B,CAAC;IAEF,oCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAEtD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAC7E,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,oCAAQ,GAAR,UAAS,CAAS;QAAlB,iBAcC;QAbC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC3E,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,UAAU,CAAC;gBACT,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,EACC;YACE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IAEP,CAAC;IAGD,uCAAW,GAAX;QACE,IAAG,IAAI,CAAC,iBAAiB,EAAE;YAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SAAC;QACpE,IAAG,IAAI,CAAC,oBAAoB,EAAC;YAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SAAC;QACvE,IAAG,IAAI,CAAC,wBAAwB,EAAC;YAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAAC;IAG/E,CAAC;IA9CU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;YAExB,MAAM,EAAE,EAAE;SACX,CAAC;yCAYuB,sEAAe,EAAa,8DAAc;OATtD,iBAAiB,CA+C7B;IAAD,wBAAC;CAAA;AA/C6B;;;;;;;;;;;;ACb9B,8lBAA8lB,kBAAkB,2BAA2B,yBAAyB,4BAA4B,uCAAuC,6G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArrB;AACQ;AAGjB;AAOzC;IAIE,4BAAoB,MAAe,EAAU,CAAkB;QAA3C,WAAM,GAAN,MAAM,CAAS;QAAU,MAAC,GAAD,CAAC,CAAiB;QAD/D,iBAAY,GAAY,KAAK,CAAC;IACqC,CAAC;IAEpE,0CAAa,GAAb,UAAc,EAAS;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,EAAE,CAAC,CACpC,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAWC;QATC,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAC7B,mBAAS,IAAI,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,EACvC,aAAG,IAAI,YAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;IAGxC,CAAC;IACD,wCAAW,GAAX;QACE,IAAI,IAAI,CAAC,eAAe,EAAE;YAAE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SAAE;IACnE,CAAC;IAzBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;YAEzB,MAAM,EAAE,EAAE;SACX,CAAC;yCAK6B,sDAAM,EAAa,sEAAe;OAJpD,kBAAkB,CA2B9B;IAAD,yBAAC;CAAA;AA3B8B;;;;;;;;;;;;;ACX/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home.component';\nimport {EmployeesComponent} from './employees.component';\nimport {PositionsComponent} from './positions.component';\nimport {PageNotFoundComponent} from './page-not-found.component';\nimport {EmployeeComponent} from './employee.component';\nimport {PositionComponent} from './position.component';\n\n\nconst routes: Routes = [{path:'home', component: HomeComponent},\n                        {path: 'employees', component: EmployeesComponent},\n                        {path: 'positions', component: PositionsComponent},\n                        {path: 'employee/:_id', component: EmployeeComponent},\n                        {path: 'position/:_id', component: PositionComponent},\n                        {path: '', redirectTo: '/home', pathMatch:'full'},\n                        {path: '**', component:PageNotFoundComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<body>\\n<app-nav></app-nav>\\n\\n\\n<div class=\\\"color-border\\\"> </div>\\n\\n<app-content></app-content>\\n<div class=\\\"color-border\\\"> </div>\\n\\n<app-footer></app-footer>\\n\\n\\n\\n</body>\\n\\n\\n<router-outlet></router-outlet>\\n\"","/*********************************************************************************\n*  WEB422 – Assignment 05\n*  I declare that this assignment is my own work in accordance with Seneca  Academic Policy.  No part of this\n*  assignment has been copied manually or electronically from any other source (including web sites) or \n*  distributed to other students.\n* \n*  Name: Louie Tse Student ID: 027168103 Date: 2018/11/11\n*\n********************************************************************************/ \n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'influx-ap';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home.component';\nimport { EmployeesComponent } from './employees.component';\nimport { PositionsComponent } from './positions.component';\nimport { ContentComponent } from './content.component';\nimport { NavComponent } from './nav.component';\nimport { FooterComponent } from './footer.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PositionService } from './data/position.service';\nimport { EmployeeService } from './data/employee.service';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport { EmployeeComponent } from './employee.component';\nimport { PositionComponent } from './position.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EmployeesComponent,\n    PositionsComponent,\n    ContentComponent,\n    NavComponent,\n    FooterComponent,\n    PageNotFoundComponent,\n    EmployeeComponent,\n    PositionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PositionService, EmployeeService],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styles: []\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable} from \"rxjs\";\nimport { Employee } from './employee';\nimport { EmployeeRaw } from './employeeRaw';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\nprivate url = \"https://floating-bayou-71862.herokuapp.com\";\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${this.url}/employees`);\n  }  \n  \n  getEmployee(id:string): Observable<EmployeeRaw[]>{\n    return this.http.get<EmployeeRaw[]>(`${this.url}/employee-raw/${id}`);\n  }\n\n  saveEmployee(employee: EmployeeRaw) : Observable<any>{\n\n    return this.http.put<any>(`${this.url}/employee/${employee._id}`, employee);\n\n  }\n\n\n\n  \n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable} from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Position } from './position';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PositionService {\n  private url = \"https://floating-bayou-71862.herokuapp.com\";\n\n  constructor(private http: HttpClient) { }\n\n  getPositions(): Observable<Position[]> {\n    return this.http.get<Position[]>(`${this.url}/positions`)\n  }\n\n  savePosition(position: Position) : Observable<any>{\n\n    return this.http.put<any>(`${this.url}/position/${position._id}`, position)\n\n  }\n\n  getPosition(id) : Observable<Position[]>{\n    return this.http.get<Position[]>(`${this.url}/position/${id}`)\n  }\n\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Employee: {{employee.FirstName}} {{employee.LastName}}</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum.</p>\\n</div>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n  <form #f='ngForm' (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': FirstName.errors && FirstName.errors.required}\\\">\\n          <label for=\\\"FirstName\\\" class=\\\"control-label\\\">First Name:</label>\\n          <input class=\\\"form-control\\\" required autofocus #FirstName=\\\"ngModel\\\" id=\\\"FirstName\\\" type=\\\"text\\\"  name=\\\"FirstName\\\" [(ngModel)]=\\\"employee.FirstName\\\"/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"FirstName.errors && FirstName.errors.required\\\">First Name is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': LastName.errors && LastName.errors.required}\\\">\\n          <label for=\\\"LastName\\\" class=\\\"control-label\\\">Last Name:</label>\\n          <input class=\\\"form-control\\\" required autofocus #LastName=\\\"ngModel\\\" id=\\\"LastName\\\" type=\\\"text\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"employee.LastName\\\" #LastName=\\\"ngModel\\\"/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"LastName.errors && LastName.errors.required\\\">Last Name is required</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Position\\\" class=\\\"control-label\\\">Position:</label>\\n          <select class=\\\"form-control\\\"  id=\\\"Position\\\"  name=\\\"Position\\\" >\\n            <option *ngFor=\\\"let pos of positions\\\"[value]=\\\"pos._id\\\">{{pos.PositionName}} </option>\\n            \\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': SalaryBonus.errors && SalaryBonus.errors.required}\\\">\\n          <label for=\\\"SalaryBonus\\\" class=\\\"control-label\\\">Salary Bonus</label>\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">$</span>\\n            <input class=\\\"form-control\\\" required autofocus #SalaryBonus=\\\"ngModel\\\" id=\\\"SalaryBonus\\\" type=\\\"number\\\" name=\\\"SalaryBonus\\\" [(ngModel)]=\\\"employee.SalaryBonus\\\" />\\n            <span class=\\\"help-block\\\" *ngIf=\\\"SalaryBonus.errors && SalaryBonus.errors.required\\\">Salary Bonus is required</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressStreet.errors && AddressStreet.errors.required}\\\">\\n          <label for=\\\"AddressStreet\\\" class=\\\"control-label\\\">Address (Street):</label>\\n          <input class=\\\"form-control\\\" required autofocus #AddressStreet=\\\"ngModel\\\" id=\\\"AddressStreet\\\" type=\\\"text\\\" name=\\\"AddressStreet\\\" [(ngModel)]=\\\"employee.AddressStreet\\\"/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressStreet.errors && AddressStreet.errors.required\\\">Street Address is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': AddressCity.errors && AddressCity.errors.required}\\\">\\n          <label for=\\\"AddressCity\\\" class=\\\"control-label\\\">Address (City):</label>\\n          <input class=\\\"form-control\\\" required autofocus #AddressCity=\\\"ngModel\\\" id=\\\"AddressCity\\\" type=\\\"text\\\" name=\\\"AddressCity\\\" [(ngModel)]=\\\"employee.AddressCity\\\" />\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressCity.errors && AddressCity.errors.required\\\">City is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\" [ngClass]=\\\"{'form-group has-error': AddressState.errors && AddressState.errors.required}\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"AddressState\\\" class=\\\"control-label\\\">Address (State):</label>\\n          <input class=\\\"form-control\\\" required autofocus #AddressState=\\\"ngModel\\\" id=\\\"AddressState\\\" type=\\\"text\\\" name=\\\"AddressState\\\" [(ngModel)]=\\\"employee.AddressState\\\" />\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressState.errors && AddressState.errors.required\\\">State is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\" [ngClass]=\\\"{'form-group has-error': AddressZip.errors && AddressZip.errors.required}\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"AddressZip\\\" class=\\\"control-label\\\">Address (Zip Code):</label>\\n          <input class=\\\"form-control\\\" required autofocus #AddressZip=\\\"ngModel\\\" id=\\\"AddressZip\\\"  type=\\\"text\\\" name=\\\"AddressZip\\\" [(ngModel)]=\\\"employee.AddressZip\\\" />\\n          <span class=\\\"help-block\\\" *ngIf=\\\"AddressZip.errors && AddressZip.errors.required\\\">Zip Code is required</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': PhoneNum.errors && PhoneNum.errors.required}\\\">\\n          <label for=\\\"PhoneNum\\\" class=\\\"control-label\\\">Phone Number:</label>\\n          <input class=\\\"form-control\\\"  #PhoneNum=\\\"ngModel\\\" id=\\\"PhoneNum\\\" type=\\\"text\\\" name=\\\"PhoneNum\\\" required pattern=\\\"\\\\+?[ ]*[1-9]?[ ]*\\\\-?[ ]*\\\\(?[ ]*[1-9][ ]*(\\\\d[ ]*){2}\\\\)?[ ]*\\\\-?[ ]*(\\\\d[ ]*){3}-[ ]*(\\\\d[ ]*){4}\\\" [(ngModel)]=\\\"employee.PhoneNum\\\"/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"PhoneNum.errors && PhoneNum.errors.required\\\">Phone Number is required (i.e. \\\"1-(818)413-1751\\\") </span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': Extension.errors && Extension.errors.required}\\\">\\n          <label for=\\\"Extension\\\" class=\\\"control-label\\\">Extension:</label>\\n          <input class=\\\"form-control\\\" required autofocus #Extension=\\\"ngModel\\\" id=\\\"Extension\\\" type=\\\"number\\\" name=\\\"Extension\\\" [(ngModel)]=\\\"employee.Extension\\\"/>\\n          <span class=\\\"help-block\\\" *ngIf=\\\"Extension.errors && Extension.errors.required\\\">Extension is required</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"HireDate\\\" class=\\\"control-label\\\">Hire Date:</label>\\n          <input class=\\\"form-control\\\"  id=\\\"HireDate\\\" name=\\\"HireDate\\\" type=\\\"text\\\" [value]=\\\"employee.HireDate | date: 'longDate'\\\" readonly />\\n        </div>\\n      </div>\\n    </div>\\n    <hr />\\n    <a routerLink=\\\"/employees\\\" class=\\\"btn btn-warning pull-left\\\">Return to Employee List</a>\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Employee\\\" [disabled]=\\\"!f.valid\\\"/>\\n    <br />\\n    <br />\\n  </form>\\n</div>\\n</div>\\n<br />\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">\\n  <strong>Success!</strong> {{employee.FirstName}} {{employee.LastName}}'s information was successfully saved.\\n</div>\\n<div class=\\\"alert alert-danger\\\"*ngIf=\\\"failMessage\\\">\\n  <strong>Error!</strong> {{employee.FirstName}} {{employee.LastName}}'s information could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeRaw } from './data/employeeRaw';\nimport { EmployeeService } from './data/employee.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PositionService } from './data/position.service';\nimport { Position } from './data/position';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styles: []\n})\nexport class EmployeeComponent implements OnInit {\n\n  paramSubscription: any;\n  employeeSubscription: any;\n  getPositionsSubscription: any;\n  saveEmployeeSubscription: any;\n  employee: EmployeeRaw;\n  positions: Position[];\n  successMessage: boolean = false;\n  failMessage: boolean = false;\n\n  constructor(private es: EmployeeService, private ar: ActivatedRoute, private ps: PositionService) { }\n\n  ngOnInit() {\n\n    this.paramSubscription = this.ar.params.subscribe(params => {\n\n      this.employeeSubscription = this.es.getEmployee(params['_id']).subscribe(empData => {\n\n\n        this.employee = empData[0];\n\n        this.getPositionsSubscription = this.ps.getPositions().subscribe(posData => {\n\n          this.positions = posData;\n\n        });\n      });\n    });\n\n  }\n\n  onSubmit(f: NgForm): void {\n    this.saveEmployeeSubscription = this.es.saveEmployee(this.employee).subscribe(() => {\n      this.successMessage = true;\n      setTimeout(() => {\n        this.successMessage = false;\n      }, 2500)\n    },\n      () => {\n        this.failMessage = true;\n        setTimeout(() => {\n          this.failMessage = false;\n        }, 2500);\n      });\n\n  }\n  ngOnDestroy() {\n    if (this.paramSubscription) { this.paramSubscription.unsubscribe(); }\n    if (this.employeeSubscription) { this.employeeSubscription.unsubscribe(); }\n    if (this.getPositionsSubscription) { this.getPositionsSubscription.unsubscribe(); }\n    if (this.saveEmployeeSubscription) { this.saveEmployeeSubscription.unsubscribe(); }\n  }\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Employees</h2>\\n  <p class=\\\"lead\\\">An employee table that displays employee information.</p>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <input class=\\\"form-control\\\" id=\\\"EmployeeSearch\\\" name=\\\"EmployeeSearch\\\" type=\\\"text\\\" placeholder=\\\"Search Employees by Full Name or Position\\\" (keyup)=\\\"onEmployeeSearchKeyUP($event)\\\" /><br />\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-condensed table-hover\\\">\\n          <thead>\\n            <th>Full Name</th>\\n            <th>Address</th>\\n            <th>Phone Number</th>\\n            <th>Hire Date</th>\\n          </thead>\\n          <tbody>\\n            <tr  *ngFor='let emp of filteredEmployees' (click)=\\\"routeEmployee(emp._id)\\\">\\n              <td>{{emp.FirstName}} {{emp.LastName}}</td>\\n              <td>{{emp.AddressStreet}}, {{emp.AddressState}}, {{emp.AddressCity}} {{emp.AddressZip}}</td>\\n              <td>{{emp.PhoneNum}} ext:{{emp.Extension}}</td>\\n              <td>{{emp.HireDate | date: 'longDate'}} </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from './data/employee.service';\nimport { Employee } from './data/employee';\nimport { Observable } from \"rxjs\";\nimport { Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styles: []\n})\nexport class EmployeesComponent implements OnInit {\n  employees: Employee[];\n  getEmployeesSub: any;\n  loadingError: boolean = false;\n  filteredEmployees: Employee[];\n  constructor(private e: EmployeeService, private router: Router) { }\n\n\n\n  ngOnInit() {\n\n    this.getEmployeesSub = this.e.getEmployees().subscribe(\n      employees => {\n      this.employees = employees;\n        this.filteredEmployees = employees;\n      },\n      () => {\n        this.loadingError = true;\n      })\n\n\n  }\n  ngOnDestroy() {\n    if (this.getEmployeesSub) { this.getEmployeesSub.unsubscribe(); }\n  }\n\n  routeEmployee(id: string) {\n    this.router.navigate([\"/employee\", id]\n    );\n  }\n  onEmployeeSearchKeyUP(event: any) {\n\n    this.filteredEmployees = this.employees.filter(emp =>\n      emp.FirstName.toLowerCase().includes(event.target.value.toLowerCase()) ||\n      emp.LastName.toLowerCase().includes(event.target.value.toLowerCase()) ||\n      emp.Position.PositionName.toLowerCase().includes(event.target.value.toLowerCase()));\n\n  }\n\n\n\n}\n","module.exports = \"<footer id=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">Copyright &copy; 2018 Louie Tse Design by <a href=\\\"http://www.templategarden.com\\\" rel=\\\"nofollow\\\">TemplateGarden</a></div>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"follow-us\\\"> <a class=\\\"fa fa-facebook social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-twitter social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-linkedin social-icon\\\" href=\\\"#\\\"></a> <a class=\\\"fa fa-google-plus social-icon\\\" href=\\\"#\\\"></a> </div>\\n        </div>\\n      </div>\\n    </div>\\n  </footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section id=\\\"main-slider\\\" class=\\\"no-margin\\\">\\n    <div class=\\\"carousel slide\\\">\\n      <ol class=\\\"carousel-indicators\\\">\\n        <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n        <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"1\\\"></li>\\n        <li data-target=\\\"#main-slider\\\" data-slide-to=\\\"2\\\"></li>\\n      </ol>\\n      <div class=\\\"carousel-inner\\\">\\n        <div class=\\\"item active\\\" style=\\\"background-image: url(assets/images/slider/bg1.jpg)\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row slide-margin\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"carousel-content\\\">\\n                  <h1>Welcome to <span class=\\\"logo\\\"><i class=\\\"fa fa-star-half-o\\\"></i> API Demo</span></h1>\\n                  <h2>This API Demo is done to expose students on creating Components and Services to retrieve data from an API</h2>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--/.item-->\\n        \\n        <div class=\\\"item\\\" style=\\\"background-image: url(assets/images/slider/bg2.jpg)\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row slide-margin\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"carousel-content\\\">\\n                  <h1>Nonsense</h1>\\n                  <h2>I'm just here to speak nonsense... Nonsense Nonsense Nonsense</h2>\\n                 </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--/.item-->\\n        \\n        <div class=\\\"item\\\" style=\\\"background-image: url(assets/images/slider/bg3.jpg)\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row slide-margin\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"carousel-content\\\">\\n                  <h1>More Nonsense! :)</h1>\\n                  <h2>Nonsense Nonsense Nonsense Nonsense Nonsense Nonsense Nonsense Nonsense Nonsense</h2>\\n                   </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--/.item--> \\n      </div>\\n      <!--/.carousel-inner--> \\n    </div>\\n    <!--/.carousel--> \\n    <a class=\\\"prev hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"prev\\\"> <i class=\\\"fa fa-chevron-left\\\"></i> </a> <a class=\\\"next hidden-xs\\\" href=\\\"#main-slider\\\" data-slide=\\\"next\\\"> <i class=\\\"fa fa-chevron-right\\\"></i> </a> </section>\\n  <!--/#main-slider-->\\n  <div class=\\\"color-border\\\"> </div>\\n  <section id=\\\"feature\\\" >\\n    <div class=\\\"container\\\">\\n      <div class=\\\"center\\\">\\n        <h2>Featured Services</h2>\\n        <p class=\\\"lead\\\">This app exhibits two main charts that extracts data from an HEROKU API which includes sample data for positions and employee information.</p>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"features\\\">\\n          <div class=\\\"col-md-6 col-sm-6\\\">\\n            <div class=\\\"feature-wrap\\\"> <i class=\\\"fa fa-users\\\"></i>\\n              <h2>Employees</h2>\\n              <h3>A table of Employee information.</h3>\\n            </div>\\n          </div>\\n          <!--/.col-md-4-->\\n          \\n          <div class=\\\"col-md-6 col-sm-6\\\">\\n            <div class=\\\"feature-wrap\\\"> <i class=\\\"fa fa-cogs\\\"></i>\\n              <h2>Positions</h2>\\n              <h3>A table showing information on the positions and their salaries.</h3>\\n            </div>\\n          </div>\\n          <!--/.col-md-4-->\\n  \\n        </div>\\n        <!--/.services--> \\n      </div>\\n      <!--/.row--> \\n    </div>\\n    <!--/.container--> \\n  </section>\\n  <!--/#feature-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header id=\\\"header\\\">\\n    <nav class=\\\"navbar navbar-inverse\\\" role=\\\"banner\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"> <span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> </button>\\n          <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\"><i class=\\\"fa fa-star-half-o\\\"></i> Louie Tse (API Demo)</a></div>\\n        <div class=\\\"collapse navbar-collapse navbar-right\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n            <li routerLinkActive=\\\"active\\\" class=\\\"active\\\"><a routerLink=\\\"/home\\\">Home</a></li>\\n            <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/employees\\\">Employees</a></li>\\n            <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/positions\\\">Positions</a></li>\\n    \\n          </ul>\\n        </div>\\n      </div>\\n      <!--/.container--> \\n    </nav>\\n    <!--/nav--> \\n    \\n  </header>\\n  <!--/header-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styles: []\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \": <div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\">\\n    Not Found</div></div></div> \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styles: []\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Position: {{position.PositionName}}</h2>\\n  <p class=\\\"lead\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non odio sed eros tristique bibendum.</p>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form #f='ngForm' (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n    \\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': PositionName.errors && PositionName.errors.required}\\\">\\n                  <label for=\\\"PositionName\\\" class=\\\"control-label\\\">Position Name:</label>\\n                  <input class=\\\"form-control\\\" #PositionName=\\\"ngModel\\\" id=\\\"PositionName\\\" type=\\\"text\\\" name=\\\"PositionName\\\" [(ngModel)]=\\\"position.PositionName\\\" required autofocus/>\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"PositionName.errors && PositionName.errors.required\\\">Position Name is required</span>\\n                </div>\\n        \\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'form-group has-error': PositionDescription.errors && PositionDescription.errors.required}\\\">\\n              <label for=\\\"PositionDescription\\\" class=\\\"control-label\\\">Description:</label>\\n              <textarea class=\\\"form-control\\\" #PositionDescription=\\\"ngModel\\\" id=\\\"PositionDescription\\\" rows=\\\"5\\\" name=\\\"PositionDescription\\\" [(ngModel)]=\\\"position.PositionDescription\\\" required autofocus></textarea>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"PositionDescription.errors && PositionDescription.errors.required\\\">Position Description is required</span>\\n            </div>\\n          </div>\\n        </div>\\n        <hr />\\n        <a routerLink=\\\"/positions\\\" class=\\\"btn btn-warning pull-left\\\">Return to Position List</a>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" value=\\\"Update Position\\\" [disabled]=\\\"!f.valid\\\"/>\\n        <br />\\n        <br />\\n      </form>\\n    </div>\\n  </div>\\n<br />\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">\\n  <strong>Success!</strong> Position: \\\"Position Name\\\" was successfully saved.\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"failMessage\\\">\\n  <strong>Error!</strong> Position: \\\"Position Name\\\" could not be saved.\\n</div>\\n</div>\\n<br /><br />\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Position } from './data/position';\nimport { NgForm } from '@angular/forms';\nimport { PositionService } from './data/position.service';\n\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styles: []\n})\n\n\nexport class PositionComponent implements OnInit {\n\n  paramSubscription: any;\n  positionSubscription: any;\n  savePositionSubscription: any;\n  position: Position;\n  successMessage: boolean = false;\n  failMessage: boolean = false;\n\n  constructor(private p: PositionService,private ar: ActivatedRoute) {\n      \n   }\n\n  ngOnInit() {\n    this.paramSubscription = this.ar.params.subscribe(params => {\n   \n      this.positionSubscription = this.p.getPosition(params['_id']).subscribe(posData => {\n        this.position = posData[0];\n      });\n    });\n  }\n\n\n  onSubmit(f: NgForm): void{\n    this.savePositionSubscription = this.p.savePosition(this.position).subscribe(() => {\n      this.successMessage = true;\n      setTimeout(() => {\n        this.successMessage = false;\n      }, 2500)\n    },\n      () => {\n        this.failMessage = true;\n        setTimeout(() => {\n          this.failMessage = false;\n        }, 2500);\n      });\n\n  }\n\n\n  ngOnDestroy(){\n    if(this.paramSubscription) {this.paramSubscription.unsubscribe();}\n  if(this.positionSubscription){this.positionSubscription.unsubscribe();} \n  if(this.savePositionSubscription){this.savePositionSubscription.unsubscribe();}\n\n\n  }\n}\n","module.exports = \"<div class=\\\"center\\\">\\n  <h2>Positions</h2>\\n  <p class=\\\"lead\\\">A table to display different positions' information.</p>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-condensed table-hover\\\">\\n          <thead>\\n            <th>Position Title</th>\\n            <th>Position Description</th>\\n            <th>Salary</th>\\n\\n          </thead>\\n          <tbody>\\n            <tr (click)=\\\"routePosition(pos._id)\\\" *ngFor='let pos of positions'>\\n              <td>{{pos.PositionName}}</td>\\n              <td>{{pos.PositionDescription}}</td>\\n              <td>${{pos.PositionBaseSalary | number: '.2'}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PositionService } from './data/position.service';\nimport { Position } from './data/position';\nimport { Observable } from \"rxjs\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-positions',\n  templateUrl: './positions.component.html',\n  styles: []\n})\nexport class PositionsComponent implements OnInit {\n  positions: Position[];\n  getPositionsSub: any;\n  loadingError: boolean = false;\n  constructor(private router : Router, private p: PositionService) { }\n\n  routePosition(id:string){\n    this.router.navigate([\"/position\",id]\n    ); \n  }\n\n  ngOnInit() {\n\n    this.p.getPositions().subscribe(\n      positions => this.positions = positions,\n      err => this.loadingError = true);\n    if (this.loadingError) {\n      console.log(\"An error has occurred.\");\n    }\n    this.getPositionsSub = this.positions;\n\n\n  }\n  ngOnDestroy() {\n    if (this.getPositionsSub) { this.getPositionsSub.unsubscribe(); }\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}